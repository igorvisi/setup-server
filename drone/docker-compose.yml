version: '3.7'

volumes:
    drone_data:
      name: ${PROJECT_NAME}_drone

services:
  drone-server:
    container_name: ${PROJECT_NAME}_drone
    image: drone/drone:1
    ports:
      - 8080:80
    volumes:
      - /var/lib/drone:/data
      - /var/run/docker.sock:/var/run/docker.sock
    
    restart: unless-stopped
    
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DEFAULT_NETWORK}"
      - "traefik.http.routers.${PROJECT_NAME}_drone.entrypoints=web"
      - "traefik.http.routers.${PROJECT_NAME}_drone.rule=Host(`${DOMAINE_NAME}`)"
      - "traefik.http.routers.${PROJECT_NAME}_drone.rule=Host(`${DOMAINE_NAME}`) || Host(`www.${DOMAINE_NAME}`)"
      - "traefik.http.middlewares.${PROJECT_NAME}_drone-redirectregex.redirectregex.regex=^https://www.${DOMAINE_NAME}/(.*)"
      - "traefik.http.middlewares.${PROJECT_NAME}_drone-redirectregex.redirectregex.replacement=https://${DOMAINE_NAME}/$${1}"
      - "traefik.http.routers.${PROJECT_NAME}_drone.middlewares=${PROJECT_NAME}_drone-redirectregex"

    environment:
      - DRONE_GITHUB_SERVER=${DRONE_GITHUB_SERVER}
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}
      - DRONE_AGENTS_ENABLED=${DRONE_AGENTS_ENABLED}
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
      - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}
      - DRONE_TLS_AUTOCERT=${DRONE_TLS_AUTOCERT}
      - DRONE_USER_CREATE=${DRONE_USER_CREATE}
      - DRONE_LOGS_TRACE=${DRONE_LOGS_TRACE}
      - DRONE_LOGS_PRETTY=${DRONE_LOGS_PRETTY}
      - DRONE_LOGS_COLOR=${DRONE_LOGS_COLOR}

networks:
  default:
    external:
      name: ${DEFAULT_NETWORK}