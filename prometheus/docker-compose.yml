version: '2.1'

volumes:
    prometheus_data:
      name: ${PROJECT_NAME}_prometheus

services:
  prometheus:
    image: prom/prometheus:v2.23.0
    container_name: ${PROJECT_NAME}_prometheus
    volumes:
      - ./etc/prometheus.yml:/etc/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
      
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DEFAULT_NETWORK}"
      - "traefik.http.routers.${PROJECT_NAME}_prometheus.entrypoints=web"
      - "traefik.http.routers.${PROJECT_NAME}_prometheus.rule=Host(`${DOMAINE_NAME})"
      - "traefik.http.routers.${PROJECT_NAME}_prometheus.rule=Host(`${DOMAINE_NAME}`) || Host(`www.${DOMAINE_NAME}`)"
      - "traefik.http.middlewares.${PROJECT_NAME}_prometheus-redirectregex.redirectregex.regex=^https://www.${DOMAINE_NAME}/(.*)"
      - "traefik.http.middlewares.${PROJECT_NAME}_prometheus-redirectregex.redirectregex.replacement=https://${DOMAINE_NAME}/$${1}"
      - "traefik.http.routers.${PROJECT_NAME}.middlewares=${PROJECT_NAME}_prometheus-redirectregex"


networks:
  default:
    external:
      name: ${DEFAULT_NETWORK}